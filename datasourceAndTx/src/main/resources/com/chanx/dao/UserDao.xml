<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chanx.dao.UserDao">

<!--    配置查询结果列名与属性名的对应关系-->
    <resultMap id="userMap" type="com.chanx.domain.User">
<!--        主键字段的对应-->
        <id property="userId" column="id"></id>
<!--        其他字段对应-->
        <result property="userName" column="username"></result>
        <result property="userAddress" column="address"></result>
        <result property="userSex" column="sex"></result>
        <result property="userBirthday" column="birthday"></result>
    </resultMap>

<!--    查询所有-->
<!--    <select id="findAll" resultType="com.chanx.domain.User">-->
    <select id="findAll" resultMap="userMap">
        SELECT * FROM user;
    </select>

<!--    保存用户-->
    <insert id="saveUser" parameterType="com.chanx.domain.User">
        --         配置插入操作后获取插入数据的id
        <selectKey keyProperty="id" keyColumn="id" resultType="java.lang.Integer" order="AFTER">
            SELECT last_insert_id();
        </selectKey>
        INSERT INTO user(username,address,sex,birthday)VALUES(#{username},#{address},#{sex},#{birthday});
    </insert>

<!--    更新用户-->
    <update id="updateUser" parameterType="com.chanx.domain.User">
        UPDATE user SET username=#{userName},address=#{userAddress},sex=#{userSex},birthday=#{userBirthday} WHERE id=#{userId};
    </update>

<!--    删除用户-->
    <delete id="deleteUser" parameterType="java.lang.Integer">
        DELETE FROM user WHERE id=#{uid}
    </delete>

<!--    根据id查询用户-->
    <select id="findById" parameterType="java.lang.Integer" resultType="user">
        SELECT * FROM user WHERE id=#{uid}
    </select>
    
<!--    根据名称模糊查询用户信息-->
    <select id="findByName" parameterType="java.lang.String" resultType="com.chanx.domain.User">
        SELECT * FROM user WHERE username Like #{name};
    </select>

<!--    获取用户的总记录条数-->
    <select id="findTotal" resultType="int">
        SELECT COUNT(id) FROM user;
    </select>

<!--    根据queryVo的条件查询用户-->
    <select id="findUserByVo" parameterType="com.chanx.domain.QueryVo" resultType="com.chanx.domain.User">
        SELECT * FROM user WHERE username Like #{user.username};
    </select>
</mapper>